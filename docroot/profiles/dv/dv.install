<?php

/**
 * @file
 * Install, update and uninstall functions for the dv installation profile.
 */

use Drupal\user\Entity\User;
use Drupal\user\RoleInterface;
use Drupal\shortcut\Entity\Shortcut;

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function dv_install() {

  //  Enable multiversion on entites because they dont get enabled properly via features.

  $entity_types = [
    "group" => "group",
    "profile" => "profile"
  ];
  \Drupal::service('multiversion.manager')->enableEntityTypes($entity_types);

  // First, do everything in standard profile.

  // Set front page to "node".
  \Drupal::configFactory()->getEditable('system.site')->set('page.front', '/node')->save(TRUE);

  // Allow visitor account creation with administrative approval.
  $user_settings = \Drupal::configFactory()->getEditable('user.settings');
  $user_settings->set('register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL)->save(TRUE);

  // Enable default permissions for system roles.
  user_role_grant_permissions(RoleInterface::ANONYMOUS_ID, array('access comments'));
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, array('access comments', 'post comments', 'skip comment approval'));

  // Assign user 1 the "administrator" role.
  $user = User::load(1);
  $user->roles[] = 'administrator';
  $user->save();

  // We install some menu links, so we have to rebuild the router, to ensure the
  // menu links are valid.
  \Drupal::service('router.builder')->rebuildIfNeeded();

  user_role_grant_permissions(RoleInterface::ANONYMOUS_ID, array('access site-wide contact form'));
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, array('access site-wide contact form'));

  // Allow authenticated users to use shortcuts.
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, array('access shortcuts'));

  // Enable the admin theme.
  \Drupal::configFactory()->getEditable('node.settings')->set('use_admin_theme', TRUE)->save(TRUE);

  // create bot_1 user
  // this user is used to import data
  $user = User::create(array(
    'name' => 'bot1',
    'mail' => 'bot1@dmtit.com',
    'status' => 1,
  ));
  $user -> save();

}
