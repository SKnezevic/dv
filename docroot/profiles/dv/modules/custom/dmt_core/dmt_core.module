<?php

/**
 * @file
 * Contains dmt_core.module.
 */

use Drupal\Core\Config\Entity\ConfigEntityType;

/**
 * @param array $entity_types
 */
function dmt_core_entity_type_alter(array &$entity_types) {
  /** @var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
  $entity_types['block']->setListBuilderClass('Drupal\dmt_core\BlockListBuilder');
  $entity_types['view']->setListBuilderClass('Drupal\dmt_core\ViewListBuilder');
}

/**
 * Implements hook_config_presave_alter().
 */
function dmt_core_config_alter(&$context) {

  $default_config_name = $context['name'];
  $new_data = $context['data'];

  // check if we are saving domain record if so return
  // otherwise we get in to endless loop
  $list = explode('.', $default_config_name);
  if (isset($list[0]) && isset($list[1]) && $list[0] == 'domain' && $list[1] == 'record') {
    return;
  }

  /** @var \Drupal\domain\Entity\Domain $active */
  $active = \Drupal::service('domain.negotiator')->getActiveDomain();
  if (!$active->isDefault()) {

    /** @var \Drupal\Core\Config\Config $original */
    $original = \Drupal::service('config.factory')
      ->getEditable($default_config_name);
    $original_data = $original->getOriginal();

    $raw_data_diff = dmt_core_config_diff($original_data, $new_data);

    // we don't save config if there are no differences or original
    // configuration was empty
    /// @todo check if we need to write better logic here in some cases
    /// probably when we are saving configuration for one site that was never present
    /// on main site

    if(empty($raw_data_diff) || empty($original_data)) {
      return;
    }

    $context['name'] = 'domain.config.' . $active->id() . '.' . $default_config_name;
    $context['data'] = $raw_data_diff;
  }
}

/**
 * Config diff.
 *
 * @param $original_data
 * @param $new_data
 * @return array
 */
function dmt_core_config_diff($original_data, $new_data) {
  $diff = [];

  foreach ($original_data as $key => $value) {
    $new_data_value = json_encode($new_data[$key]);
    $original_data_value = json_encode($value);

    if($new_data_value != $original_data_value) {
      $diff[$key] = $new_data[$key];
    }

    if(isset($new_data[$key])) {
      unset($new_data[$key]);
    }
  }

  return $diff + $new_data;
}
