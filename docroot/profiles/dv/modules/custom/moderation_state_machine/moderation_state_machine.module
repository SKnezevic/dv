<?php

/**
 * @file
 * Contains moderation_state_machine.module.
 */

/**
 * Add Moderation State Plugin constraint on moderation_state field.
 *
 * Implements hook_entity_base_field_info_alter().
 */
function moderation_state_machine_entity_base_field_info_alter(&$fields, \Drupal\Core\Entity\EntityTypeInterface $entity_type) {
  if (!empty($fields['moderation_state'])) {
    $fields['moderation_state']->addConstraint('ModerationStatePlugin', []);
  }
}

/**
 * Implements hook_entity_presave().
 */
function moderation_state_machine_entity_presave(Drupal\Core\Entity\EntityInterface $entity) {

  if(!$entity instanceof \Drupal\Core\Entity\ContentEntityInterface) {
    return;
  }

  // Ignore entities that are being created for the first time.
  if ($entity->isNew()) {
    return;
  }

  // check if entity is Moderated Entity
  /** @var \Drupal\content_moderation\ModerationInformationInterface $moderationInfo */
  $moderationInfo = \Drupal::service('content_moderation.moderation_information');
  if (!$moderationInfo->isModeratedEntity($entity)) {
    return;
  }

  /** @var \Drupal\moderation_state_machine\Plugin\Type\ModerationStateMachineManager $switch_moderation_state_manager */
  $switch_moderation_state_manager = \Drupal::service('plugin.manager.switch_moderation_state_manager');
  $plugin_id = $switch_moderation_state_manager->getPluginIdByEntity($entity);

  /** @var \Drupal\moderation_state_machine\ModerationStateMachineBase $sms */
  $sms = $switch_moderation_state_manager->createInstance($plugin_id);
  $sms->switchState($entity);
}

/**
 * Implements hook_entity_presave().
 */
function moderation_state_machine_entity_insert(Drupal\Core\Entity\EntityInterface $entity) {

  if(!$entity instanceof \Drupal\Core\Entity\ContentEntityInterface) {
    return;
  }

  // check if entity is Moderated Entity
  /** @var \Drupal\content_moderation\ModerationInformationInterface $moderationInfo */
  $moderationInfo = \Drupal::service('content_moderation.moderation_information');
  if (!$moderationInfo->isModeratedEntity($entity)) {
    return;
  }

  /** @var \Drupal\moderation_state_machine\Plugin\Type\ModerationStateMachineManager $switch_moderation_state_manager */
  $switch_moderation_state_manager = \Drupal::service('plugin.manager.switch_moderation_state_manager');
  $plugin_id = $switch_moderation_state_manager->getPluginIdByEntity($entity);

  /** @var \Drupal\moderation_state_machine\ModerationStateMachineBase $sms */
  $sms = $switch_moderation_state_manager->createInstance($plugin_id);
  $sms->moderatedEntityInsert($entity);

}
