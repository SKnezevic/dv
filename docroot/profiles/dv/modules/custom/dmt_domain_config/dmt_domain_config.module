<?php

/**
 * @file
 * Contains dmt_domain_config.module.
 */

use Drupal\domain\Entity\Domain;
use Drupal\group\Entity\Group;

/**
 * @param array $entity_types
 */
function dmt_domain_config_entity_type_alter(array &$entity_types) {

  // replace ConfigEntityStorage with ours
  foreach ($entity_types as $entity_type) {
    $storage_class = $entity_type->getHandlerClass('storage');

    // Only override the storage for Config Entities
    if (in_array($storage_class, [
      NULL,
      'Drupal\Core\Config\Entity\ConfigEntityStorage'
    ])) {
      $entity_type->setHandlerClass('storage', "Drupal\\dmt_domain_config\\Config\\ConfigEntityStorage");
    }
  }

  // special handling for block storage since block storage is already extended by multiversion
  if (isset($entity_types['block_content'])) {
    $entity_types['block']->setHandlerClass('storage', 'Drupal\\dmt_domain_config\\Config\\BlockStorage');
  }

}

/**
 * Implements hook_form_alter().
 */
function dmt_domain_config_form_domain_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  $domain = $form_state->getFormObject()->getEntity();

  $group = !empty( $domain->getThirdPartySetting('dmt_domain_config', 'group') ) ?
    Group::load( $domain->getThirdPartySetting('dmt_domain_config', 'group') ) : NULL;

  $form['group'] = [
    '#type' => 'entity_autocomplete',
    '#target_type' => 'group',
    '#title' => t('Group'),
    '#description' => t('Select a group you want to use as base for this domain.'),
    '#tags' => FALSE,
    '#default_value' => $group,
    '#selection_settings' => array(
      'target_bundles' => array('organisation', 'area_of_activity'),
    ),
    '#weight' => 50,
  ];

  $template = !empty( $domain->getThirdPartySetting('dmt_domain_config', 'template') ) ?
    Domain::load($domain->getThirdPartySetting('dmt_domain_config', 'template')) : NULL;

  $form['template'] = [
    '#type' => 'entity_autocomplete',
    '#target_type' => 'domain',
    '#selection_handler' => 'dmt:domain',
    '#title' => t('Domain Template'),
    '#default_value' => $template,
    '#description' => t('Select a domain you want to copy the settings.'),
    '#weight' => 51
  ];

  $form['#entity_builders'][] = 'dmt_domain_config_form_domain_add_form_builder';
}

/**
 * Entity builder for the domain configuration entity.
 */
function dmt_domain_config_form_domain_add_form_builder($entity_type, \Drupal\domain\Entity\Domain $domain, &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  if ($form_state->getValue('group')) {
    $domain->setThirdPartySetting('dmt_domain_config', 'group', $form_state->getValue('group'));
  } else {
    $domain->unsetThirdPartySetting('dmt_domain_config', 'group');
  }

  if ($form_state->getValue('template')) {
    $domain->setThirdPartySetting('dmt_domain_config', 'template', $form_state->getValue('template'));
  } else {
    $domain->unsetThirdPartySetting('dmt_domain_config', 'template');
  }
}
