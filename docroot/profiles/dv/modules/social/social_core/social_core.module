<?php

/**
 * @file
 * Contains template_suggestions_extra.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function social_core_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  // Add node type to page suggestions.
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if (!is_object($node)) {
      $node = node_load($node);
    }
  }

  if (isset($node) && is_object($node)) {
    $altered_suggestions = array();

    foreach ($suggestions as $suggestion) {
      $extra_suggeston = '';

      // Add node type after the wildcard.
      if ($suggestion === 'page__node__%') {
        $extra_suggeston = 'page__node__' . $node->getType();
      }

      $altered_suggestions[] = $suggestion;
      if ($extra_suggeston) {
        $altered_suggestions[] = $extra_suggeston;
      }
    }
    $suggestions = $altered_suggestions;
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function social_core_theme_suggestions_comment_alter(array &$suggestions, array $variables) {
  $original = $variables['theme_hook_original'];
  $entity = $variables['elements']['#comment'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions = array();
  $suggestions[] = $original;
  $suggestions[] = $original . '__' . $sanitized_view_mode;
  $suggestions[] = $original . '__' . $entity->bundle();
  $suggestions[] = $original . '__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'comment' . '__' . $sanitized_view_mode;

  return $suggestions;
}
