# Update the hostname to the local development environment hostname
vagrant_hostname: local.dv.com
vagrant_machine_name: dv
vagrant_ip: 192.168.88.88

drupalvm_vagrant_version_min: '1.8.5'

# Sometimes, on windows, VM http is only accessible with this 
# vagrant_public_ip: "192.168.1.55"

# Set drupal_site_name to the project's human-readable name.
drupal_site_name: "Dv"

# Memory and CPU to use for this VM.
vagrant_memory: 2048
vagrant_cpus: 2

# Provide the path to the project root to Vagrant.
vagrant_synced_folders:
  # Set the local_path for the first synced folder to `.`.
  - local_path: .
    # Set the destination to the Acquia Cloud subscription machine name.
    destination: /var/www/dv
    type: nfs

build_composer_project: false
# Toggling this to `true` would invoke `composer install` with the
# projects own `composer.json` successfully.
build_composer: false
drupal_composer_path: false
drupal_composer_install_dir: "/var/www/dv"
drupal_core_path: "{{ drupal_composer_install_dir }}/docroot"

drupal_db_user: drupal
drupal_db_password: drupal
drupal_db_name: drupal

# Set this to 'false' if you don't need to install drupal (using the drupal_*
# settings below), but instead copy down a database (e.g. using drush sql-sync).
install_site: false

# Drupal VM automatically creates a drush alias file in your ~/.drush folder if
# this variable is 'true'.
configure_drush_aliases: false

# This is required for front-end building tools.
nodejs_version: "0.12"
nodejs_npm_global_packages:
  - name: bower
  - name: gulp-cli
nodejs_install_npm_user: "{{ drupalvm_user }}"
npm_config_prefix: "/home/{{ drupalvm_user }}/.npm-global"
installed_extras:
  - adminer
  - nodejs
  - selenium
  - mailhog
  - pimpmylog
  - varnish
  - xdebug
  - drupalconsole
  - solr


php_xdebug_default_enable: 1
php_xdebug_coverage_enable: 1
php_xdebug_idekey: PHPSTORM

post_provision_scripts:
  - "../../../acquia/blt/scripts/drupal-vm/post-provision.sh"
  - "../../../../box/postprovision-solr.sh"
  - "../../../../box/postprovision-zsh.sh"
